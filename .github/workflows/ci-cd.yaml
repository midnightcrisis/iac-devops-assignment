name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]    

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code (with tags)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Required to fetch all Git history/tags
          persist-credentials: true

      - name: Get latest version
        id: version
        run: |
          # Get latest tag or default to v1.0.0
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.0")
          echo "Current version: $LATEST_TAG"

          # Extract major, minor, patch
          IFS='.' read -r major minor patch <<< "${LATEST_TAG#v}"
          NEW_PATCH=$((patch + 1))
          NEW_VERSION="v$major.$minor.$NEW_PATCH"

          echo "New version: $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t arkashira/devops-assignment:${{ env.NEW_VERSION }} ./app
          docker push arkashira/devops-assignment:${{ env.NEW_VERSION }}

      - name: Update Kustomize manifest
        run: |
          sed -i "s|image: arkashira/devops-assignment:.*|image: arkashira/devops-assignment:${{ env.NEW_VERSION }}|" kustomize/overlays/dev/patch-deployment.yaml

      - name: Commit and tag changes
        run: |
          git config --global user.name "github"
          git config --global user.email "ashira.fuse@gmail.com"
          git add kustomize/overlays/dev/patch-deployment.yaml
          git commit -m "CI: Update image to ${{ env.NEW_VERSION }} [skip ci]"
          git tag ${{ env.NEW_VERSION }}
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git push origin HEAD:main
          git push origin ${{ env.NEW_VERSION }}